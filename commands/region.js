const { Command } = require("../structures");

module.exports = class RegionInfoCommand extends Command {
  constructor(client) {
    super(client, {
      name: "region",
      description: "Shows info about the given region.",
      syntax: "region <...REGION-NAME>",
      args: 1
    });
  }
  async run(msg, [...target]) {
    target = target.join("_").toLowerCase();
    const startTime = process.hrtime();
    try {
      const { REGION: data } = await this.client
        .request(`
https://www.nationstates.net/cgi-bin/api.cgi?region=${target}&q=name+flag+delegate+numnations+delegateauth+delegatevotes+tags+founder+founderauth
        `);

      let fNameSplit, fNameText;
      if (data.FOUNDER[0] !== "0") {
        fNameSplit = data.FOUNDER[0].split("_");
        fNameSplit.forEach((word, index) => {
          fNameSplit[index] = word.charAt(0).toUpperCase() + word.slice(1);
        });
        const fViewName = fNameSplit.join(" ");

        let fAuthText = "executive";
        if (data.FOUNDERAUTH[0].indexOf("X") === -1) fAuthText = "non-executive";

        fNameText = `**${fViewName}**, ${fAuthText}`;
      } else {
        fNameText = "None";
      }
      let dNameSplit, dViewName, dNameText, dAuthText;
      if (data.DELEGATE[0] !== "0") {
        dNameSplit = data.DELEGATE[0].split("_");
        dNameSplit.forEach((word, index) => {
          dNameSplit[index] = word.charAt(0).toUpperCase() + word.slice(1);
        });
        dViewName = dNameSplit.join(" ");

        dAuthText = "executive";
        if (data.DELEGATEAUTH[0].indexOf("X") === -1) dAuthText = "non-executive";

        dNameText = `**${dViewName}**, ${data.DELEGATEVOTES[0]} votes, ${dAuthText}`;
      } else {
        dNameText = "None";
      }
      const embed = {
        color: 0x1772c9,
        title: data.NAME[0],
        description: data.TAGS[0].TAG.join(", "),
        url: `https://nationstates.net/region=${target}`,
        thumbnail: { url: data.FLAG[0] },
        fields: [{
          name: "Population",
          value: `${data.NUMNATIONS[0]} nations`
        },
        {
          name: "Founder",
          value: fNameText
        },
        {
          name: "WA Delegate",
          value: dNameText
        }],
        footer: { text: "Generated by Quasar" }
      };
      const diff = process.hrtime(startTime);
      const diffString = diff[0] > 0 ? `\`${diff[0]}\`s` : `\`${diff[1] / 1e6}\`ms`;
      console.log("[DEBUG] Time taken:", diffString);
      return msg.channel.send({ embed });
    } catch (err) {
      return msg.channel.send(`There was an error with your request: \`${err.message}\``);
    }
  }
};